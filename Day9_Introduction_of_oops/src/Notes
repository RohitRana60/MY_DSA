Object-Oriented Programming Concept(OOP):ðŸ‘‡
Object-oriented programmingM(OOP) is a  computer programming  model  that organizes software design
around data,or objects,rather than functions and logic.
OOP focuses on the objects that developers want to manipulate rather than the logic required to manipulate
them.This approach to programming is well-suited for programs that are large, complex and actively updated
or maintained.

Classes:ðŸ‘‡
A class is a blueprint or a template for creating objects. It defines a data structure and behavior
that its objects will have. In most programming languages that support OOP (Object-Oriented Programming),
a class can contain.

Characteristics of a class:ðŸ‘‡
Class consists of attributes or methods which can be executed by objects(instance of the class)
Components of a class : A class needs to have all of these for its existence.
+ Access Modifiers - scope of class where it can be used.
+ class keyword - used to create a class.
+ Class name - Name of class.
+ Body - The body of class which consists of attributes, objects, methods and so on

Syntax of creating a class:ðŸ‘‡
public class MyClass {
 Declares a class named MyClass. The public keyword indicates that the class is accessible from other classes.
}

Objects:ðŸ‘‡
An object is an instance of a class. When you create an object, you're creating a specific instance of that class,
 with its own set of data and characteristics. Continuing with the "Car" example:

 Object has three characteristics:ðŸ‘‡
 Identity - Unique name of the object
 State - Attributes of an object
 Behavior - methods or logic executed on the object

 Syntax of creating object of a class:ðŸ‘‡
 className objectName = new className();
 + The 'new' keyword is used to instantiate objects.